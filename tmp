# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import sys

from PyQt5 import QtGui


from PyQt5.QtGui import *

from PyQt5.QtCore import *
import  time
import threading
import ARQ_receiver
import ARQ_sender

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 594)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(60, 40, 113, 32))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(60, 100, 113, 32))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(540, 60, 113, 32))
        self.pushButton_3.setObjectName("pushButton_3")

        self.list =[]
        for i in range(1, 30):
            self.



        for label in list:
            print(type(list[label]))
            # list[label].
        # self.list[i].setOnjectName("label_{}".format(str(i)))




        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



        #
        # self.Sender = ARQ_sender.Sender_start
        # self.Receiver = ARQ_receiver.Receiver_start

        self.pushButton.clicked.connect(self.start_sender_receiver)


        self.pushButton.clicked.connect(self.changeColor)
        self.pushButton.clicked.connect(self.show_sender_info)
        self.pushButton_2.clicked.connect(self.show_sender_info)
        self.pushButton_3.clicked.connect(self.show_sender_info)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "ARQ"))
        self.pushButton_2.setText(_translate("MainWindow", "GO_BACK_N"))
        self.pushButton_3.setText(_translate("MainWindow", "STOP"))
        self.list[0].setText(_translate("MainWindow", "okokok:"))

        for i in range(len(list)):
            list[i].setText(_translate("MainWindow", "{}".format(i+1)))

    def start_sender_receiver(self):

        thread_sender = threading.Thread(target=self.Sender)
        thread_receiver  = threading.Thread(target=self.Receiver)


        thread_receiver.start()
        thread_sender.start()

    # def

    def changeColor(self):

        palette1 = QPalette()
        # palette1.setColor(QPalette.WindowText, QColor(192, 253, 123))
        palette1.setColor(QPalette.Background, QColor(192, 253, 123))

        self.label_1.setAutoFillBackground(True)
        self.label_1.setPalette(palette1)

        list = ["label_1", "label_2"]

        self.label_2.setAutoFillBackground(True)
        self.label_2.setPalette(palette1)





    def show_sender_info(self):
        # self.textBrowser.setText(msg)
        pass

    # def changeColor(self,):

    # def check_


if __name__ == '__main__':

    app = QApplication(sys.argv)
    mainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())

